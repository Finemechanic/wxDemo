"""Subclass of MainGUI, which is generated by wxFormBuilder."""

import wx
import gui

# Implementing MainGUI
class DemoApp( gui.MainGUI ):
    def __init__( self, parent ):
        gui.MainGUI.__init__( self, parent )
        self.myLocale = wx.Locale(wx.Locale.GetSystemLanguage())
        self.imglist = []
        self.SetIcon(wx.Icon(u"camera.ico"))
        
    
    # Handlers for MainGUI events.
    def onFileOpen( self, event ):
        # TODO: Implement onFileOpen
        wildcard = "JPEG files (*.jpg)|*.jpg"
        with wx.FileDialog(None, "Select a file", wildcard=wildcard, style=wx.FD_OPEN | wx.FD_FILE_MUST_EXIST) as dlg:
                        if dlg.ShowModal() == wx.ID_OK:
                                filename=dlg.GetPath()
                        else:
                                filename=None

        if not filename is None:
                
                self.img = wx.Image(filename, wx.BITMAP_TYPE_ANY)
                self.img.factor = 1
                self.imglist.append(self.img)                                
                self.bitmapImage.SetBitmap(wx.Bitmap(self.img))
                bmpThumb = wx.StaticBitmap( self.pnlThumbnail, wx.ID_ANY, wx.Bitmap(self.img.Scale(60, self.img.GetHeight()*1.0/self.img.GetWidth()*60)), wx.DefaultPosition, wx.DefaultSize, 0 )
                bmpThumb.imgtag = self.img 
                self.img.bmptag = bmpThumb
                self.pnlThumbnail.GetSizer().Add (bmpThumb, wx.SizerFlags().Top().Center().Border(wx.ALL, 5))
                bmpThumb.Bind (wx.EVT_LEFT_DOWN, self.thumbClick)
                self.mnuClose.Enable( True )
                self.UpdateStatus()
                self.Layout()
                
                
    def OnZoomIn( self, event ):
        # TODO: Implement OnZoomIn
        self.img.factor *= 1.2
        self.RefreshImage()
        self.UpdateStatus()
        self.Layout()
        pass
    
    def OnZoomOut( self, event ):
        # TODO: Implement OnZoomOut
        self.img.factor /= 1.2
        self.RefreshImage()
        self.UpdateStatus()
        self.Layout()
        pass

    def OnClose( self, event ):
        # TODO: Implement OnClose
        iimg = self.imglist.index(self.img)
        del self.imglist[iimg]
        self.img.bmptag.Destroy()
        self.img.Destroy()
        
        if iimg<=len(self.imglist)-1:
                self.img = self.imglist[iimg]
        else:
                if len(self.imglist)>0:
                        self.img = self.imglist[-1]
                else:
                        self.img = None
                        self.mnuClose.Enable( False )
                
                        
        self.RefreshImage()
        self.UpdateStatus()
        self.Layout()
        pass

    def OnExit( self, event ):
        # TODO: Implement OnExit
        self.Close()
        pass


    def thumbClick( self, event ):
        stbclicked = event.GetEventObject()
        self.img = stbclicked.imgtag #self.imglist[stbclicked.imgtag-1]
        self.RefreshImage()
        return
        
    def RefreshImage(self):
        if self.img is None:
                self.bitmapImage.SetBitmap(wx.Bitmap())
        else:
                self.bitmapImage.SetBitmap(wx.Bitmap(self.img.Scale(self.img.GetWidth()*self.img.factor, self.img.GetHeight()*self.img.factor)))
        self.UpdateStatus()
        self.Layout()

    def UpdateStatus(self):
            if self.img is None:
                    self.SetStatusText("", 1)
            else:
                    self.SetStatusText("{:4.0f}%".format(self.img.factor*100), 1)
            

    
    
if __name__ == '__main__':
        # When this module is run (not imported) then create the app, the
        # frame, show it, and start the event loop.
        app= wx.App()
        frm = DemoApp(None)
        frm.Show()
        app.MainLoop()
